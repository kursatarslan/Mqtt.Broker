// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mqtt.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Mqtt.Context.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200922061335_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Mqtt.Domain.Models.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClientId")
                        .HasColumnName("ClientId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Payload")
                        .HasColumnType("text");

                    b.Property<string>("Topic")
                        .HasColumnName("Topic")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("Mqtt.Domain.Models.Connection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("CleanSession")
                        .HasColumnType("boolean");

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<string>("Endpoint")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Connection");
                });

            modelBuilder.Entity("Mqtt.Domain.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("Mqtt.Domain.Models.MqttMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Topic")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Created");

                    b.ToTable("MqttMessages");
                });

            modelBuilder.Entity("Mqtt.Domain.Models.MqttUser", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("MqttUsers");
                });

            modelBuilder.Entity("Mqtt.Domain.Models.Payload", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BreakPedal")
                        .HasColumnType("integer");

                    b.Property<int>("Maneuver")
                        .HasColumnType("integer");

                    b.Property<bool>("PlatoonDissolveStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("PlatoonGap")
                        .HasColumnType("integer");

                    b.Property<bool>("PlatoonOverrideStatus")
                        .HasColumnType("boolean");

                    b.Property<string>("RealPayload")
                        .HasColumnType("text");

                    b.Property<int>("StationId")
                        .HasColumnType("integer");

                    b.Property<int>("StreamingRequests")
                        .HasColumnType("integer");

                    b.Property<int>("TruckRoutingStaus")
                        .HasColumnType("integer");

                    b.Property<bool>("V2HealthStatus")
                        .HasColumnType("boolean");

                    b.Property<int>("VehicleRank")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Payload");
                });

            modelBuilder.Entity("Mqtt.Domain.Models.Platoon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsFollower")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLead")
                        .HasColumnType("boolean");

                    b.Property<string>("PlatoonRealId")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("VechicleId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Platoon");
                });

            modelBuilder.Entity("Mqtt.Domain.Models.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClientId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Enable")
                        .HasColumnType("boolean");

                    b.Property<string>("QoS")
                        .HasColumnType("text");

                    b.Property<string>("Topic")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subscribe");
                });
#pragma warning restore 612, 618
        }
    }
}
